{
	"env": {
		"node": true
	},
	"extends": [
		"airbnb-typescript/base",
        "prettier",
        "prettier/@typescript-eslint",
		"plugin:@typescript-eslint/recommended",
		"prettier/@typescript-eslint"
	],
	"parser": "@typescript-eslint/parser",
	"parserOptions": {
		"ecmaVersion": 6,
		"sourceType": "module",
		"ecmaFeatures": {
			"modules": true
		}
	},
	"settings": {
		"import/resolver": {
			"node": {
				"extensions": [".ts", ".js"]
			}
		}
	},
	"rules": {
		"array-bracket-spacing": ["error", "always"],
		"arrow-parens": ["off"],
		"arrow-spacing": "error",
		"comma-dangle": ["error", "never"],
		"comma-style": ["error", "last"],
		"consistent-return": "off",
		"constructor-super": "error",
		"eol-last": ["error", "always"],
		"generator-star-spacing": "off",
		"import/no-extraneous-dependencies": "off",
		"import/no-unresolved": [
			"error"
		],
		"import/order": "warn",
		"import/prefer-default-export": "off",
		"indent": "off",
		"jsx-a11y/anchor-is-valid": "off",
		"keyword-spacing": [
			"error",
			{
				"after": true,
				"before": true
			}
		],
		"linebreak-style": ["error", "unix"],
		"no-console": "error",
		"no-const-assign": "error",
		"no-multi-spaces": "error",
		"no-await-in-loop": "off",
		"no-multiple-empty-lines": [
			"error",
			{
				"max": 1,
				"maxBOF": 0,
				"maxEOF": 0
			}
		],
		"no-this-before-super": "error",
		"no-trailing-spaces": "error",
		"no-undef": "error",
		"no-unreachable": "error",
		"no-unused-vars": "off",
		"no-use-before-define": "off",
		"object-curly-spacing": ["warn", "always"],
		"padded-blocks": ["error", "never"],
		"quotes": ["error", "single"],
		"semi": ["error", "never"],
		"space-before-function-paren": [
			"error",
			{
				"anonymous": "never",
				"asyncArrow": "always",
				"named": "never"
			}
		],
		"valid-typeof": "warn",
		"@typescript-eslint/indent": [
			"error",
			"tab",
			{
				"SwitchCase": 1,
				"ignoredNodes": ["JSXElement *", "JSXElement"]
			}
		],
		"@typescript-eslint/explicit-function-return-type": "off",
		"@typescript-eslint/no-use-before-define": [
			"error",
			{
				"functions": false,
				"typedefs": false
			}
		],
		"@typescript-eslint/no-unused-vars": "error"
	},
	"plugins": [
		"import",
		"@typescript-eslint"
	]
}
